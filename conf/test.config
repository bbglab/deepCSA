/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run bbglab/deepCSA -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input  = 'assets/input_double_bam.csv'

    custom_groups              = false

    //custom_groups_file         = "/workspace/datasets/transfer/ferriol_deepcsa/genes_per_chromosome_band.tsv"
    custom_groups_separator     = 'tab'

    use_custom_minimum_depth    = 100

    customize_annotation        = false
    custom_annotation_tsv       = "/data/bbg/datasets/transfer/ferriol_deepcsa/custom_regions/test_file.regions.tsv"

    hotspots_annotation         = false
    hotspots_definition_file    = '/data/bbg/datasets/transfer/ferriol_deepcsa/hotspots/lung_tcga_hotspots.header.tsv'

    omega_hotspots              = false
    omega_hotspots_bedfile     = "/data/bbg/datasets/transfer/ferriol_deepcsa/PanCancer_custom.annotated.with_hotspots.complete.cleaned.deepCSA.bed6.bed"
    // omega_hotspots_bedfile     = "/data/bbg/datasets/transfer/ferriol_deepcsa/kidney_panel.hotspots.bed4.bed"
    hotspot_expansion           = 30

    oncodrivefml               = true
    oncodriveclustl            = false

    omega                      = false
    omega_globalloc            = false
    omega_mutabilities         = false
    site_comparison_grouping   = 'aminoacid_change,aminoacid,site'

    oncodrive3d                = false
    o3d_raw_vep                = false
    o3d_plot                   = false
    o3d_plot_chimerax          = false
    store_depths               = false


    plot_depths                = false

    signatures                 = false
    mutationrate               = true

    mutated_epithelium         = false
    mutated_epithelium_vaf     = false
    expected_mutation_rate     = false
    dnds                       = false

    indels                     = false

    profileall                 = true
    profilenonprot             = false
    profileexons               = false
    profileintrons             = false
    all_duplex_counts          = false

    regressions                = true
    mutrate_regressions                = 'mutrate,nonproteinaffecting,snv'
    oncodrivefml_regressions           = 'zscore,allprof,nosignificant'
    omega_regressions                  = 'allprof,uniquemuts,truncating,nosignificant'
    predictors_file_regressions        = '/workspace/projects/bladder_ts/data/complete_cohort/samples_metadata/complete_cohort_bladder.discarded_histofindings_lowmuts.clinical_variables_extended.regressions-codified.tsv'
    predictors_plot_config_regressions = ['had_prior_chemotherapy': ['#FAEC82', 'Had prior chemotherapy'],'history_drinking': ['#C5FA8F', 'Was/is drinker'],'history_smoking': ['#B27DFA', 'Was/is smoker'],'bmi_scaled': ['#FACC79', 'BMI (0-1 scaled)'],'is_male': ['#9EC9F9', 'Is Male'],'age_decades': ['#F7645E', 'Age (decade)']]
    random_effects_vars_regressions    = 'SUBJECT_ID'
    multipletesting_join_regressions   = ['multipletest_rule1': ['truncating|nonsynonymoussplice', 'allprof', 'uniquemuts', 'nosignificant']]
    multivariate_rules_regressions     = ['multirule3': 'age_decades, bmi_scaled','multirule1': 'history_smoking, is_male','multirule2': 'history_smoking, age_decades']
    response_subplots                  = false
    total_plot                         = false
    response_and_total_subplots        = true
    make2                              = true
    correct_pvals                      = true
    sign_threshold                     = 0.2
}

process {
    withLabel:process_high_memory {
        cpus    = {  2 * task.attempt }
        memory  = {  15.GB * task.attempt }
    }

    withLabel:process_high {
        cpus   = {  2    * task.attempt }
        memory = {  16.GB * task.attempt }
        time   = {  1.h  * task.attempt }
    }


}

