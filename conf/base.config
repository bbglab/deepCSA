/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bbglab/deepCSA Nextflow base config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    A 'blank slate' config file, appropriate for general use on most high performance
    compute environments. Assumes that all software is installed and available on
    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
----------------------------------------------------------------------------------------
*/

process {

    resourceLimits = [cpus: params.max_cpus, memory: params.max_memory, time: params.max_time]

    // TODO nf-core: Check the defaults for all processes
    cpus           = { 1 }
    memory         = { 6.GB * task.attempt }
    time           = { 15.min * task.attempt }



    errorStrategy  = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries     = 3
    maxErrors      = '-1'

    withLabel: error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel: error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }


    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognised by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    withLabel: process_single {
        cpus = { 1 }
    }
    withLabel: process_low {
        cpus   = { 2 * task.attempt }
        memory = { 12.GB * task.attempt }
    }
    withLabel: process_medium {
        cpus   = { 6 * task.attempt }
        memory = { 36.GB * task.attempt }
    }
    withLabel: process_high {
        cpus   = { 12 * task.attempt }
        memory = { 72.GB * task.attempt }
        time   = { 16.h * task.attempt }
    }


    withLabel: process_low_memory {
        memory = { 4.GB * task.attempt }
    }
    withLabel: memory_medium {
        memory = { 8.GB * task.attempt }
    }
    withLabel: process_medium_high_memory {
        memory = { 36.GB * task.attempt }
    }
    withLabel: process_high_memory {
        memory = { 200.GB * task.attempt }
    }



    withLabel: time_minimal {
        time = { 15.m * task.attempt }
    }
    withLabel: time_low {
        time = { 4.h * task.attempt }
    }
    withLabel: time_medium {
        time = { 8.h * task.attempt }
    }
    withLabel: process_long {
        time = { 20.h * task.attempt }
    }



    withLabel: cpu_single_fixed {
        cpus = { 1 }
    }
    withLabel: cpu_single {
        cpus = { 1 * task.attempt }
    }
    withLabel: process_low_fixed_cpus {
        cpus = { 2 }
    }
    withLabel: cpu_low {
        cpus = { 2 * task.attempt }
    }
    withLabel: cpu_lowmed {
        cpus = { 4 * task.attempt }
    }
    withLabel: cpu_medium {
        cpus = { 8 * task.attempt }
    }
    withLabel: cpu_medium_high {
        cpus = { 12 }
    }
    withLabel: cpu_high {
        cpus = { 30 * task.attempt }
    }
    withLabel: cpu_veryhigh {
        cpus = { 50 * task.attempt }
    }


    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        cache = false
    }
}
