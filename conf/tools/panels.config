/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:VCFANNOTATEPANEL:ENSEMBLVEP_VEP' {
        ext.args         = "${params.vep_params_panel} --tab"

        if (!params.vep_cache && !params.download_cache)    container = { params.vep_genome ? "nfcore/vep:${params.vep_version}.${params.vep_genome}" : "nfcore/vep:${params.vep_version}.${params.genome}" }
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/panelannotation" },
                pattern: "*{gz}"
            ]
        ]
    }

    withName: 'CUSTOMPROCESSING' {
        ext.simple = true
    }

    withName: 'CUSTOMPROCESSINGRICH' {
        ext.simple = false
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATECAPTUREDPANELS' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/capturedpanels" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATECONSENSUSPANELS.*' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/consensuspanels" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }


    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSALL' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelsall" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSPROTAFFECT' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelsprotaffect" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSNONPROTAFFECT' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelsnonprotaffect" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSEXONS' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelsexons" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSINTRONS' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelsintrons" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

    withName: 'BBGTOOLS:DEEPCSA:CREATEPANELS:CREATESAMPLEPANELSSYNONYMOUS' {
        publishDir       = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/createpanels/samplepanels/createsamplepanelssynonymous" },
                pattern: "*{tsv,bed}"
            ]
        ]
    }

}



