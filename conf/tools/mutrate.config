/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'SUBSETMUTRATE' {
        ext.filters     = ''

        ext.output_fmt  = { ['"header": true',
                                '"columns": ["SAMPLE_ID",  "MUT_ID", "ALT_DEPTH", "canonical_SYMBOL", "TYPE"]',
                                '"colnames": ["SAMPLE_ID", "MUT_ID", "ALT_DEPTH", "GENE", "TYPE"]'
                            ].join(',\t').trim()
                        }

        publishDir       = [
                enabled : false
        ]
    }

    withName: 'BBG_DEEPCSA:MUTRATEPROT:SUBSETMUTRATE' {
        ext.filters     = { ['"Protein_affecting": "protein_affecting"'].join(',\t').trim()
                        }
        ext.output_fmt  = { ['"header": true',
                                '"columns": ["SAMPLE_ID",  "MUT_ID", "ALT_DEPTH", "canonical_SYMBOL", "TYPE"]',
                                '"colnames": ["SAMPLE_ID", "MUT_ID", "ALT_DEPTH", "GENE", "TYPE"]'
                            ].join(',\t').trim()
                        }

        publishDir       = [
                enabled : false
        ]
    }

    withName: '.*NONPROT:SUBSETMUTRATE' {
        ext.filters     = { ['"Protein_affecting": "non_protein_affecting"'].join(',\t').trim()
                        }
        ext.output_fmt  = { ['"header": true',
                                '"columns": ["SAMPLE_ID",  "MUT_ID", "ALT_DEPTH", "canonical_SYMBOL", "TYPE"]',
                                '"colnames": ["SAMPLE_ID", "MUT_ID", "ALT_DEPTH", "GENE", "TYPE"]'
                            ].join(',\t').trim()
                        }

        publishDir       = [
                enabled : false
        ]
    }

    withName: '.*SYNONYMOUS:SUBSETMUTRATE' {
        ext.filters     = { ['"canonical_Consequence_broader": "synonymous"'].join(',\t').trim()
                        }
        ext.output_fmt  = { ['"header": true',
                                '"columns": ["SAMPLE_ID",  "MUT_ID", "ALT_DEPTH", "canonical_SYMBOL", "TYPE"]',
                                '"colnames": ["SAMPLE_ID", "MUT_ID", "ALT_DEPTH", "GENE", "TYPE"]'
                            ].join(',\t').trim()
                        }

        publishDir       = [
                enabled : false
        ]
    }

    withName: 'SYNMUTRATE' {
        ext.mode     = 'mutations'
    }
    withName: 'SYNMUTREADSRATE' {
        ext.mode     = 'mutated_reads'
    }

}



