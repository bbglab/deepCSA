{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/bbglab/deepCSA/dev/nextflow_schema.json",
    "title": "bbglab/deepCSA pipeline parameters",
    "description": "deepCSA : deepClonalStructureAnalysis is a pipeline for the analysis of DNA sequencing data when there is information about the number of unique molecules sequenced for each site",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "hotspot_annotation_options": {
            "title": "Hotspot mutation annotation options",
            "type": "object",
            "description": "Flag and TSV file used for annotating specific custom hotspots.",
            "default": "",
            "properties": {
                "hotspots_annotation": {
                    "type": "boolean",
                    "format": "file-path",
                    "description": "Enrich the annotation of mutations with the information on desired hotspots.",
                    "fa_icon": "fas fa-book",
                    "help_text": "BED file that contains the regions to be discarded in the analysis."
                },
                "hotspots_definition_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "TSV file with the definition of hotspots. It MUST contain a header with the following columns: CHROM, POS, MUTTYPE, HOTSPOT_NAME. Values of MUTTYPE column have to be to be C>N, T>N or '-'.",
                    "fa_icon": "fas fa-book",
                    "help_text": "TSV file with the definition of hotspots. It MUST contain a header with the following columns: CHROM, POS, MUTTYPE, HOTSPOT_NAME. Values of MUTTYPE column have to be to be C>N, T>N or '-'."
                }
            }
        },
        "grouping_configs": {
            "title": "Sample grouping configurations",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Cohort related files that indicate which samples belong to the same group.",
            "properties": {
                "features_table": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "default": null,
                    "description": "Path to table file with cohort samples information.",
                    "help_text": "Path to table file with cohort samples information.",
                    "fa_icon": "far fa-file-code"
                },
                "features_table_separator": {
                    "type": "string",
                    "description": "Separator of the features table file",
                    "default": "comma",
                    "help_text": "",
                    "fa_icon": "far fa-file-code"
                },
                "features_table_dict": {
                    "type": "string",
                    "description": "String in JSON-like format defining the groups of samples.",
                    "help_text": "This is required when the features_table dataset wants to be used.",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "gene_grouping_configs": {
            "title": "Gene grouping configurations",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Sequencing panel related files that indicate which custom groups of genes you want to analyze.",
            "properties": {
                "custom_groups": {
                    "type": "boolean",
                    "description": "Do you want to use custom gene groups?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to use custom gene groups?"
                },
                "custom_groups_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "default": null,
                    "description": "Path to table file with gene groups information.",
                    "help_text": "Path to table file with gene groups information.",
                    "fa_icon": "far fa-file-code"
                },
                "custom_groups_separator": {
                    "type": "string",
                    "description": "Separator of the features table file",
                    "default": "tab",
                    "help_text": "",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "custom_bedfile_configs": {
            "title": "Custom BED file configurations",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "BED file dependent on the sequencing panel or minimum depth of the regions where to focus tha analysis.",
            "properties": {
                "use_custom_bedfile": {
                    "type": "boolean",
                    "description": "Do you want to use a custom BED file?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to use a custom BED file?"
                },
                "custom_bedfile": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "default": null,
                    "description": "Path to BED file to use.",
                    "help_text": "Path to BED file to use.",
                    "fa_icon": "far fa-file-code"
                },
                "use_custom_minimum_depth": {
                    "type": "integer",
                    "description": "Minimum average depth of a position across all samples for it to be included in the analysis",
                    "default": 0,
                    "help_text": "",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "custom_annotation_configs": {
            "title": "Custom annotation configurations",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "BED-like file to customize the annotation of variants falling in certain regions.",
            "properties": {
                "customize_annotation": {
                    "type": "boolean",
                    "description": "Do you want to use a custom BED file?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to use a custom BED file?"
                },
                "custom_annotation_tsv": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "default": null,
                    "description": "TSV file with the following columns: chromosome  start   end gene_name    impactful_mutations neutral_impact new_impact",
                    "help_text": "TSV file with the following columns: chromosome  start   end gene_name    impactful_mutations neutral_impact new_impact",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "omega_bedfile_configs": {
            "title": "Definition of hotspot regions configuration",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "BED file dependent on the hotspots present in the sequencing panel of interest.",
            "properties": {
                "omega_withingene": {
                    "type": "boolean",
                    "description": "Do you want to analyze omega hotspots independently?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to analyze omega hotspots independently?"
                },
                "omega_hotspots_bedfile": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to BED file to use.",
                    "help_text": "Path to BED file to use.",
                    "fa_icon": "far fa-file-code"
                },
                "hotspot_expansion": {
                    "type": "integer",
                    "description": "Size (in bp) of how much you want to expand the region around the hotspot (same in both directions)",
                    "default": 30,
                    "help_text": "",
                    "fa_icon": "far fa-file-code"
                },
                "omega_autodomains": {
                    "type": "boolean",
                    "description": "Do you want to automatically generate the domains for omega?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to automatically generate the domains for omega?"
                },
                "omega_autoexons": {
                    "type": "boolean",
                    "description": "Do you want to automatically generate the theoretical exons from the panel for omega?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to automatically generate the theoretical exons from the panel for omega?"
                }
            }
        },
        "tool_execution_configs": {
            "title": "Tool selection options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options to indicate which tools are run.",
            "properties": {
                "oncodrivefml": {
                    "type": "boolean",
                    "description": "Do you want to run oncodrivefml?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to true if you want to run oncodrivefml."
                },
                "oncodriveclustl": {
                    "type": "boolean",
                    "description": "Do you want to run oncodriveclustl?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to true if you want to run oncodriveclustl."
                },
                "oncodrive3d": {
                    "type": "boolean",
                    "description": "Do you want to run oncodrive3d?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to true if you want to run oncodrive3d."
                },
                "o3d_raw_vep": {
                    "type": "boolean",
                    "description": "Do you want to run oncodrive3d with the raw vep output as input?",
                    "fa_icon": "fas fa-book"
                },
                "o3d_plot": {
                    "type": "boolean",
                    "description": "Do you want to plot the oncodrive3d results?",
                    "fa_icon": "fas fa-book"
                },
                "o3d_plot_chimerax": {
                    "type": "boolean",
                    "description": "Do you want to plot the structural representation of oncodrive3d results?",
                    "fa_icon": "fas fa-book"
                },
                "omega": {
                    "type": "boolean",
                    "description": "Do you want to run omega?",
                    "fa_icon": "fas fa-book"
                },
                "omega_globalloc": {
                    "type": "boolean",
                    "description": "Do you want to run omega with the globalloc mode?",
                    "fa_icon": "fas fa-book"
                },
                "omega_vaf_distorsioned": {
                    "type": "boolean",
                    "description": "Do you want to run omega with the different VAF distorsioned gropus?",
                    "fa_icon": "fas fa-book"
                },
                "omega_plot": {
                    "type": "boolean",
                    "description": "Do you want to plot omega results?",
                    "fa_icon": "fas fa-book"
                },
                "omega_mutabilities": {
                    "type": "boolean",
                    "description": "Do you want to get omega mutabilities per site and a per site comparison with the observed?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to get omega mutabilities per site and a per site comparison with the observed?"
                },
                "site_comparison_grouping": {
                    "type": "string",
                    "description": "Define which is the unit of comparison of the per site mutabilities exp. vs obs. The options are: 'site', 'aminoacid', 'aminoacid_change'. You can provide a comma separated list of the preferred options or also all.",
                    "default": "aminoacid_change",
                    "fa_icon": "fas fa-book",
                    "help_text": "Define which is the unit of comparison of the per site mutabilities exp. vs obs. The options are: 'site', 'aminoacid', 'aminoacid_change'. You can provide a comma separated list of the preferred options or also all."
                },
                "dnds": {
                    "type": "boolean",
                    "description": "Do you want to run dNdScv?",
                    "fa_icon": "fas fa-book"
                },
                "signatures": {
                    "type": "boolean",
                    "description": "Do you want to run signatures?",
                    "fa_icon": "fas fa-book"
                },
                "mutationrate": {
                    "type": "boolean",
                    "description": "Do you want to run mutationrate?",
                    "fa_icon": "fas fa-book"
                },
                "indels": {
                    "type": "boolean",
                    "description": "Do you want to run indels?",
                    "fa_icon": "fas fa-book"
                },
                "mutated_cells_reads": {
                    "type": "boolean",
                    "description": "Do you want to run mutated_cells_reads?",
                    "fa_icon": "fas fa-book"
                },
                "mutated_cells_vaf": {
                    "type": "boolean",
                    "description": "Do you want to run mutated_cells_reads using the VAFs?",
                    "fa_icon": "fas fa-book"
                },
                "expected_mutated_cells": {
                    "type": "boolean",
                    "description": "Do you want to run expected_mutated_cells?",
                    "fa_icon": "fas fa-book"
                },
                "plot_depths": {
                    "type": "boolean",
                    "description": "Do you want to run plot_depths?",
                    "fa_icon": "fas fa-book"
                }
            }
        },
        "profile_computation_config": {
            "title": "Profile computation options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Turn on and off the computation of the mutational profile in the different regions of the genome.",
            "properties": {
                "profileall": {
                    "type": "boolean",
                    "description": "Do you want to run the profile for all mutations?",
                    "fa_icon": "fas fa-book"
                },
                "profilenonprot": {
                    "type": "boolean",
                    "description": "Do you want to run the profile for non-protein affecting mutations only?",
                    "fa_icon": "fas fa-book"
                },
                "profileexons": {
                    "type": "boolean",
                    "description": "Do you want to run the profile for exon mutations only?",
                    "fa_icon": "fas fa-book"
                },
                "profileintrons": {
                    "type": "boolean",
                    "description": "Do you want to run the profile for intron mutations only?",
                    "fa_icon": "fas fa-book"
                }
            }
        },
        "filtering_parameters": {
            "title": "Profile computation options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Turn on and off the computation of the mutational profile in the different regions of the genome.",
            "properties": {
                "confidence_level": {
                    "type": "string",
                    "description": "Duplex reads confidence level",
                    "default": "high",
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "all_duplex_counts": {
                    "type": "boolean",
                    "description": "Whether the VCFs provided have been complmented with the counts of all duplex+non-duplex molecules.",
                    "fa_icon": "fas fa-question-circle"
                },
                "pileup_all_duplex": {
                    "type": "boolean",
                    "description": "Whether the BAM provided for the pileup is the mediumhigh quality BAM file or the whole duplex BAM.",
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "Whether the BAM provided for the pileup is the mediumhigh quality BAM file or the whole duplex BAM."
                },
                "panel_with_canonical": {
                    "type": "boolean",
                    "description": "Using only data from canonical transcript for building the panels",
                    "default": true,
                    "fa_icon": "fas fa-book",
                    "help_text": "Using only data from canonical transcript for building the panels"
                },
                "sample_panel_min_depth": {
                    "type": "integer",
                    "description": "Depth threshold for the sample panels",
                    "default": 40,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "consensus_panel_min_depth": {
                    "type": "integer",
                    "description": "Depth threshold for the consensus panel",
                    "default": 500,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "germline_threshold": {
                    "type": "number",
                    "description": "VAF threshold for definition of somatic variants.",
                    "default": 0.3,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "mutation_depth_threshold": {
                    "type": "integer",
                    "description": "Depth threshold for discarding mutations. Minimum to have a reliable estimation of the VAF.",
                    "default": 40,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "repetitive_variant_thres": {
                    "type": "integer",
                    "description": "Any variant shared among these or more samples is flagged as repetitive variant.",
                    "default": 5,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "prop_samples_nrich": {
                    "type": "number",
                    "description": "Any variant that is n_rich in this proportion of samples is flagged as cohort_n_rich variant.",
                    "default": 0.1,
                    "fa_icon": "fas fa-book",
                    "help_text": ""
                },
                "blacklist_mutations": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to TXT with the IDs of the mutations to remove.",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "reference_datasets": {
            "title": "Reference datasets options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference datasets for running specific programs.",
            "properties": {
                "cosmic_ref_signatures": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "description": "Path to file containing the reference signatures to use in SigProfilerAssignment.",
                    "help_text": "You can obtain it from COSMIC website or adapt one from any other source, but it should follow the same structure as the COSMIC one.",
                    "fa_icon": "far fa-file-code",
                    "default": "COSMIC_v3.4_SBS_GRCh38.txt"
                },
                "wgs_trinuc_counts": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to file containing the trinucleotide counts of the whole genome that is being used.",
                    "help_text": "This is being used for renormalizing the mutation counts seen in the panel to the counts of the whole genome.",
                    "fa_icon": "far fa-file-code",
                    "default": "assets/trinucleotide_counts/trinuc_counts.homo_sapiens.tsv"
                },
                "exclude_subgroups": {
                    "type": "string",
                    "default": "[\\'UV_signatures\\', \\'MMR_deficiency_signatures\\', \\'POL_deficiency_signatures\\', \\'HR_deficiency_signatures\\',\\'BER_deficiency_signatures\\', \\'Artifact_signatures\\', \\'Lymphoid_signatures\\']",
                    "description": "Path to file containing the trinucleotide counts of the whole genome that is being used.",
                    "help_text": "This is being used for renormalizing the mutation counts seen in the panel to the counts of the whole genome.",
                    "fa_icon": "far fa-file-code"
                },
                "datasets3d": {
                    "type": "string",
                    "description": "Path to folder containing the oncodrive3d datasets built.",
                    "help_text": "Path to folder containing the oncodrive3d datasets built.",
                    "fa_icon": "far fa-file-code",
                    "default": "oncodrive3d/datasets"
                },
                "annotations3d": {
                    "type": "string",
                    "description": "Path to folder containing the oncodrive3d annotation built.",
                    "help_text": "Path to folder containing the oncodrive3d annotation built.",
                    "fa_icon": "far fa-file-code",
                    "default": "oncodrive3d/annotations"
                },
                "cadd_scores": {
                    "type": "string",
                    "description": "Path to the CADD scores file for running OncodriveFML. See: oncodrivefml.readthedocs.io",
                    "help_text": "Path to the CADD scores file for running OncodriveFML. See: oncodrivefml.readthedocs.io.",
                    "fa_icon": "far fa-file-code",
                    "default": "CADD/v1.7/hg38/whole_genome_SNVs.tsv.gz"
                },
                "cadd_scores_ind": {
                    "type": "string",
                    "description": "Path to the CADD scores file index for running OncodriveFML. See: oncodrivefml.readthedocs.io",
                    "help_text": "Path to the CADD scores file index for running OncodriveFML. See: oncodrivefml.readthedocs.io.",
                    "fa_icon": "far fa-file-code",
                    "default": "CADD/v1.7/hg38/whole_genome_SNVs.tsv.gz.tbi"
                },
                "dnds_ref_transcripts": {
                    "type": "string",
                    "description": "Path to the dNdScv RefCDS file for all genes. See https://github.com/im3sanger/dndscv",
                    "help_text": "Path to the dNdScv RefCDS file for all genes. See https://github.com/im3sanger/dndscv",
                    "fa_icon": "far fa-file-code",
                    "default": "RefCDS_human_latest_intogen.rda"
                },
                "dnds_covariates": {
                    "type": "string",
                    "description": "Path to the dNdScv covariates file for all genes in the corresponding genome. See https://github.com/im3sanger/dndscv",
                    "help_text": "Path to the dNdScv covariates file for all genes in the corresponding genome. See https://github.com/im3sanger/dndscv",
                    "fa_icon": "far fa-file-code",
                    "default": "covariates_hg19_hg38_epigenome_pcawg.rda"
                }
            }
        },
        "ensembl_vep_options": {
            "title": "Ensembl VEP options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "VEP related files required for the annotation.",
            "properties": {
                "vep_genome": {
                    "type": "string",
                    "description": "Genome assembly for Ensembl VEP.",
                    "fa_icon": "fas fa-book",
                    "help_text": "For the latest human genome assembly this should be: GRCh38.",
                    "default": "GRCh38"
                },
                "vep_species": {
                    "type": "string",
                    "description": "Species to use for Ensembl VEP.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Use `homo_sapiens` when working with human data.",
                    "default": "homo_sapiens"
                },
                "vep_cache_version": {
                    "type": "integer",
                    "description": "Ensembl VEP cache version.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Make sure to also update the container to use. Otherwise leave 108.",
                    "default": 111
                },
                "vep_out_format": {
                    "type": "string",
                    "description": "Ensembl VEP output format.",
                    "fa_icon": "fas fa-book",
                    "help_text": "tab or vcf",
                    "default": "tab"
                },
                "vep_params": {
                    "type": "string",
                    "description": "Additional parameters for running Ensembl VEP.",
                    "fa_icon": "fas fa-book",
                    "help_text": "",
                    "default": "--no_stats --cache --offline --symbol --protein --canonical --af_gnomadg --af_gnomade"
                },
                "vep_params_panel": {
                    "type": "string",
                    "description": "Additional parameters for running Ensembl VEP for the panel annotation.",
                    "fa_icon": "fas fa-book",
                    "help_text": "",
                    "default": "--no_stats --cache --offline --symbol --protein --canonical"
                },
                "download_cache": {
                    "type": "boolean",
                    "description": "Do you want to download the cache? Activate it only if necessary.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Do you want to download the cache? Activate it only if necessary."
                },
                "vep_cache": {
                    "type": "string",
                    "description": "Location of Ensembl VEP cache.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Define a place to store the Ensembl VEP cache.",
                    "default": ".vep"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 56,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "256 GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "10d",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/grouping_configs"
        },
        {
            "$ref": "#/$defs/gene_grouping_configs"
        },
        {
            "$ref": "#/$defs/custom_bedfile_configs"
        },
        {
            "$ref": "#/$defs/omega_bedfile_configs"
        },
        {
            "$ref": "#/$defs/hotspot_annotation_options"
        },
        {
            "$ref": "#/$defs/tool_execution_configs"
        },
        {
            "$ref": "#/$defs/generic_options"
        },
        {
            "$ref": "#/$defs/profile_computation_config"
        },
        {
            "$ref": "#/$defs/filtering_parameters"
        },
        {
            "$ref": "#/$defs/reference_datasets"
        },
        {
            "$ref": "#/$defs/ensembl_vep_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/max_job_request_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ],
    "properties": {
        "store_depths": {
            "type": "boolean"
        },
        "multiqc_title": {
            "type": "string"
        },
        "email": {
            "type": "string"
        }
    }
}
